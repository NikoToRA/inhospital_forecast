name: Azure Static Web Apps CI/CD

# Deployment configuration for inhospitalforcast2
# Verification deployment - no slots, clean configuration
# Test deployment after cleaning up workflow files
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r frontend/requirements.txt
          pip install -r api/requirements.txt

      - name: Prepare static content
        run: |
          mkdir -p frontend/build
          echo '<!DOCTYPE html>
          <html>
          <head>
              <title>InHospital Forecast</title>
              <meta charset="utf-8">
              <meta name="viewport" content="width=device-width, initial-scale=1">
              <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
          </head>
          <body>
              <div class="container py-4">
                  <h1>InHospital Forecast API</h1>
                  <p>Available API endpoints:</p>
                  <ul>
                      <li><a href="/api/DataFunction">/api/DataFunction</a></li>
                      <li><a href="/api/PredictFunction">/api/PredictFunction</a></li>
                  </ul>
              </div>
          </body>
          </html>' > frontend/build/index.html

      - name: Prepare API
        run: |
          # Create function.json files if they don't exist
          for func in DataFunction PredictFunction; do
            if [ ! -f "api/$func/function.json" ]; then
              echo '{
                "bindings": [
                  {
                    "authLevel": "anonymous",
                    "type": "httpTrigger",
                    "direction": "in",
                    "name": "req",
                    "methods": ["get", "post"]
                  },
                  {
                    "type": "http",
                    "direction": "out",
                    "name": "$return"
                  }
                ]
              }' > "api/$func/function.json"
            fi
          done

          # Create or update host.json
          echo '{
            "version": "2.0",
            "extensionBundle": {
              "id": "Microsoft.Azure.Functions.ExtensionBundle",
              "version": "[2.*, 3.0.0)"
            }
          }' > api/host.json

          # Create .python_packages directory
          mkdir -p api/.python_packages

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "frontend/build"
          api_location: "api"
          output_location: "."
          api_build_command: "python -m pip install --upgrade pip && python -m pip install -r requirements.txt"
          app_artifact_location: "build"

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: "close"
          app_location: "frontend/build" 